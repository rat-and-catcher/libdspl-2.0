/*! ****************************************************************************
\page getting_started_make Компиляция libdspl-2.0 утилитой make

\section sec_getting_started_make Компиляция libdspl-2.0 утилитой make

Предварительно необходимо установить все необходимые утилиты. 
Если этот шаг не сделан, то смотри раздел: \n 
\ref getting_started_toolchain
\n


\subsection sec_make_download Скачиваем исходные коды libdspl-2.0
Скачиваем 
<a href="https://github.com/Dsplib/libdspl-2.0">
с сайта Github.com
</a>
исходные коды DSPL:
\n
\n
\image html dspl_github.png
\n
\n
Разархивируем в рабочий каталог.

Вы можете разархивировать в любой каталог, `libdspl-2.0` будет
обозначать каталог, в который разархивированы исходные коды.

В качестве примера, исходные коды были разархивированы в 
каталог `J:\libdspl-2.0`.





\subsection sec_make_compile Сборка проекта и выполнение тестовой программы
Переходим в указанный каталог:
\n
\n
\image html libdspl_dir.png
\n
\n
Выделяем в строку адреса и вводим туда `cmd`: 
\n
\n
\image html libdspl_cmd.png
\n
\n
В результате откроется консоль Windows в которую можно вводить команды. \n
Вводим команду `ming32-make`:\n
\n
\n
\image html winconsole_1.png
\n
\n
После нажатия `[Enter]` начнется сборка всех компонент библиотеки. 
\note 
Время первой сборки зависит от производительности компьютера и может 
занимать несколько минут. Последующие сборки будут значительно 
быстрее, потому что при первой сборке компилируются библиотеки BLAS и 
LAPACK, которые линкуются в дальнейшем из готовых объектных файлов.

После сборки библиотеки в каталоге `_release` появится файл скомпилированной 
библиотеки `libdspl.dll`, а также заголовочный файл `dspl.h` и файл `dspl.c` 
с функциями импорта библиотеки.

\n
\n
\image html libdspl_release.png
\n
\n

Также можно перейти в каталог `examples/bin` в котором сохранены 
примеры. Также в данном каталоге можно найти готовую библиотеку 
`libdspl.dll`:
\n
\n
\image html libdspl_bin.png
\n
\n
На этом установка всех компонент и сборка проекта окончена. \n

Смотри также: \ref getting_started_codeblocks \n
***************************************************************************** */