/*! ****************************************************************************
\page getting_started_codeblocks Компиляция libdspl-2.0 в CodeBlocks

\section sec_codeblocks Компиляция libdspl-2.0 в CodeBlocks

Предварительно необходимо установить все необходимые утилиты. 
Если этот шаг не сделан, то смотри раздел:
\n
\ref getting_started_toolchain
\n





\subsection sec_codeblocks_download Скачиваем исходные коды libdspl-2.0
Скачиваем 
<a href="https://github.com/Dsplib/libdspl-2.0">
с сайта Github.com
</a>
исходные коды DSPL:

\image html dspl_github.png

Разархивируем в рабочий каталог.

Вы можете разархивировать в любой каталог, `libdspl-2.0` будет
обозначать каталог, в который разархивированы исходные коды.

В качестве примера, исходные коды были разархивированы в 
каталог `J:\libdspl-2.0`. \n







\subsection sec_codeblocks_start Запуск и настройка CodeBlocks
Запускаем IDE CodeBlocks и в меню `File` выбираем меню `Open`: 
\n
\n
\image html codeblocks_1.png
\n
\n
В открывшемся диалоговом окне переходим в каталог 
`\libdspl-2.0\ide\codeblocks`,
где `libdspl-2.0` - каталог, в который была разархивирован проект DSPL.
\n
\n
\image html codeblocks_2.png
\n
\n
Открываем `dspl.workspace` и находим внутри проект 
`examples -> src -> dspl_info_test.c`.
В окне редактора увидим короткий исходный код программы, которая загружает 
библиотеку, вызывает функцию `dspl_info` и выгружает библиотеку.
\n
\n
\image html codeblocks_3.png
\n
\n
Теперь важный шаг перед первой сборкой проектов: необходимо настроить 
среду CodeBlocks для работы с компилятором GCC и отладчиком. 
Для этого открываем меню `Settings->Compiler`:
\n
\n
\image html codeblocks_4.png
\n
\n
В открывшемся окне настроек выбираем `Global compiler settings` и переходим 
на вкладку`Toolchain executables`. Все поля данного окна должны быть 
заполнены как на картинке:
\n
\n
\image html codeblocks_5.png
\n
\n
Нажимает `OK` и окно закроется.

Теперь настраиваем отладчик. Для этого открываем меню `Settings->Debugger`:
\n
\n
\image html codeblocks_6.png
\n
\n
В открывшемся окне выбираем `GDB/CDB debugger -> Default` и заполняем поля 
формы и проставляем галочки как показано на картинке:
\n
\n
\image html codeblocks_7.png
\n
\n
Нажимаем `OK` и теперь все готово для сборки проекта. 




\subsection sec_codeblocks_compile Сборка и выполнение тестовой программы
Выбираем меню `Build -> Rebuild workspace`:
\n
\n
\image html codeblocks_8.png
\n
\n
Если окроектся диалог с вопросом, то соглашаемся:
\n
\n
\image html codeblocks_9.png
\n
\n
В результате начнется первая сборка проекта, которая может занять 
несколько минут, потому что необходимо первый раз скомпилировать 
библиотеки BLAS и LAPACK. Последующие сборки будут быстрее, 
потому что перекомпилировать надо будет только измененные файлы.

По завершению сборки в поле `Build log` появится сообщение как на картинке:
\n
\n
\image html codeblocks_10.png
\n
\n
Проект собрался и нам осталось лишь выполнить приложение:
\n
\n
\image html codeblocks_11.png
\n
\n
В результате появится консольное окно в который функция `dspl_info` 
выведет информацию о библиотеке DSPL 2.0:
\n
\n
\image html codeblocks_12.png
\n
\n
Таким образом, настройка CodeBlocks и компиляция проекта закончена успешно.
\n
***************************************************************************** */